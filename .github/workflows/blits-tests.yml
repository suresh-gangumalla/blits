name: Run Blits Tests

on:
  pull_request:
    branches:
      - dev

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20.16.0
        cache: npm

    - name: Install Dependencies
      run: npm install

    - name: Run Tests
      run: npm run test > test-report.txt
      continue-on-error: true

    - name: Extract Test Summary
      id: extracted-test-summary
      run: |
        # Search for a line containing both "passed:" and "failed:"
        summary=$(grep -E "passed:.*failed:" test-report.txt | head -n1)
        
        # Extract the number of failed tests.
        # This regex assumes a format like: "passed: ...  failed: <number> ..."
        failed=$(echo "$summary" | sed -E 's/.*failed:\s*([0-9]+).*/\1/')
        
        # Set output so it can be used laterâ€”in GitHub Actions
        echo "summary=$summary" >> $GITHUB_OUTPUT
        
        # If the number of failed tests is greater than 1, exit with error.
        if [ "$failed" -gt 1 ]; then
            exit 1
        fi

    - name: Find Comment
      uses: peter-evans/find-comment@v3
      id: fc
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: 'github-actions[bot]'
        body-includes: Test Results Summary

    - name: Create Comment in PR
      if: steps.fc.outputs.comment-id == ''
      uses: peter-evans/create-or-update-comment@v4
      with:
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          **Test Results Summary** 
          ${{ steps.extracted-test-summary.outputs.summary}}
        reactions: rocket

    - name: Update Comment in PR
      if: steps.fc.outputs.comment-id != ''
      uses: peter-evans/create-or-update-comment@v4
      with:
        comment-id: ${{ steps.fc.outputs.comment-id }}
        body: |
          **Test Results Summary** 
          ${{ steps.extracted-test-summary.outputs.summary}}
        reactions: hooray

    # - name: Post Test Results as PR Comment
    #   if: always()
    #   uses: actions/github-script@v6
    #   env:
    #       SUMMARY: ${{ steps.extracted-test-summary.outputs.summary }}
    #   with:
    #    script: |
    #       github.rest.issues.createComment({
    #         owner: context.repo.owner,
    #         repo: context.repo.repo,
    #         issue_number: context.issue.number,
    #         body: `**Test Results Summary:**\n${process.env.SUMMARY}`
    #       });
        
    - name: Upload Test Report Artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-report
        path: test-report.txt
    
